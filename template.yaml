AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Metadata:
  Version: 0.0.12

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Deployment environment

Conditions:
  ProdEnvironment: !Equals [!Ref Environment, prod]

Globals:
  Function:
    Runtime: nodejs14.x
    Tracing: Active
    Environment:
      Variables:
        ENVIRONMENT: !If [ProdEnvironment, "PRODUCTION", "DEVELOPMENT"]

Resources:
  ApiPrepaga:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/js/index.handler
      Timeout: 30
      MemorySize: 256
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt apiRequestEvents.Arn
            BatchSize: 10
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: api-prepaga-lambda
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - AmazonS3FullAccess
        - SQSPollerPolicy:
            QueueName: !GetAtt apiRequestEvents.QueueName
      VpcConfig:
        # We can improve this by creating a more restricted sg
        SecurityGroupIds:
          - sg-f182ccb9
          - sg-e7ef26ae
          - sg-c7770eb1
          - sg-973005e0
          - sg-92cbe5e5
        # We can improve this by leaving only the required subnet
        SubnetIds:
          - subnet-15e5ad48
          - subnet-0e1ea212169ac7f1e
          - subnet-0fd59d52
          - subnet-bde8a0e0
          - subnet-01d4c84a
          - subnet-03e0a85e
          - subnet-18d6ca53
          - subnet-a7dcc0ec
          - subnet-19d3cf52
          - subnet-99213dd2
          - subnet-34d2ce7f
          - subnet-bbe4ace6
          - subnet-aaeba3f7
  apiPrepagaRequestSenderUser:
    Type: AWS::IAM::User
    Properties:
      Path: "/"
      Policies:
      - PolicyName: AllowSendToSQS
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: sqs:SendMessage
            Resource: !GetAtt apiRequestEvents.Arn
  apiRequestEvents:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ApiRequestEvents.fifo
      VisibilityTimeout: 30
      FifoQueue: true
      ContentBasedDeduplication: true
